apiVersion: v1
kind: Namespace
metadata:
  name: production

-----------------------
apiVersion: v1
kind: Service
metadata:
  name: unco
  namespace: production
  labels:
    app: unco
spec:
  selector:
    app: unco
  ports:
  - port: 80
    name: http
    targetPort: 80
  type: NodePort

-----------------------
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: unco
    namespace: production
  spec:
    selector:
      matchLabels:
        app: unco
    strategy:
      type: RollingUpdate
    template: #Template for container
      metadata:
        labels:
          app: unco
      spec:
        containers: 
        - name: unco
          image: asia.gcr.io/$PROJECT_ID/poduction/unco:$SHORT_SHA
          imagePullPolicy: Always
          ports:
          - containerPort: 80
            name: unco
          resources:
            requests:
              cpu: 50m

----------------------------
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: unco
  namespace: production
spec:
  maxReplicas: 25
  minReplicas: 3
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: unco
  targetCPUUtilizationPercentage: 100

----------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unco
  namespace: production
  annotations:
    kubernetes.io/ingress.global-static-ip-name: unco
    kubernetes.io/ingress.allow-http: "false"
    networking.gke.io/managed-certificates: unco
spec:
  rules:
  - host: aslamgcp.my.id
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service: 
            name: unco
            port:
              number: 80

--------------------
apiVersion: networking.gke.io/v1beta2
kind: ManagedCertificate
metadata:
  name: unco
  namespace: production
spec:
  domains: 
    - aslamgcp.my.id